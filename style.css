/*
    putting elemtnents as blocks makes easier to position them later.

    don't use IDs for styles, they are meant for JavaScript.

    Use JavaScript in external files.

    Emoji, found on unicode-table.com.

    Display and position can be easily overwritten.
*/
/*############## Defaults ###################*/
nav, 
header, 
footer {
    display: block;
} /*making sure that browser reads it as a blocks*/

body {
    line-height: 1; /*space between text*/
    margin: 0; /*making sure that everything is sucked to the edges */
}

/*############## Nav Bar ###################*/

nav {
    width: 100%; /*taking 100% of the avaialbe space */
    margin: 0;
    
}

nav ul {
    background-color: #eee;
    overflow: hidden; /* any of the elemtats that are too big to fit for the screen are setting hidden | helping with user experiance*/
    margin: 0; 
    padding: 0;
}

nav ul li {
    list-style: none; /*guarantee no bullets points*/
}

ul.topnav li {
    float: left; /* inline elements to the left */
}

ul.topnav li.topnav-right {
    float: right; /* inline elements to the left */
}

ul.topnav li a {
    display: block;
    text-decoration: none;
    min-height: 16px; /*making sure that shrinking will not change the size of font lower than 16px | could be done in a way: font-size: 16px; */
    text-align: center;
    padding: 14px;
    text-transform: uppercase;
    color: #666;
}

ul.topnav li a:hover {
    background-color: #0080ff;
    color: white;
}

ul.topnav li.dropdown-icon {
    display: none;
}

/*############## Mobile styles ###################*/
@media screen and (max-width: 680px) {
    /* allows to keep home on the top bar */
    /* 
        :not means that the thing in brackets will not be affected.
        :nth-child(n) chooses which element will not be affected where n
    is the number.
    */
    ul.topnav li:not(:nth-child(1)){  
        display: none;
    }
    
    /* holds signs links to the right side. */
    ul.topnav li.dropdownIcon {
        display: block;
        float: right;
    }
    
    /*  Holds menu button in the corner.
        An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed). However; if an absolute positioned element has no positioned ancestors, it uses the document body, and moves along with page scrolling.
    */
    ul.topnav.responsive li.dropdownIcon {
    position: absolute;
    top: 0;
    right: 0;
    }
   
    /*
        An element with position: relative; is positioned relative to its normal position. Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position. Other content will not be adjusted to fit into any gap left by the element.
    */
    ul.topnav.responsive {
        position: relative; 
    }
    
    ul.topnav.responsive li {
        display: inline;
        float: none;
    }
    
    ul.topnav.responsive li a {
        display: block;
        text-align: center;
    }
    
    
}



















